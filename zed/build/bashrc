[ -f "$HOME/.bashrc" ] && source "$HOME/.bashrc"

build_os=$(uname -s | tr '[A-Z]' '[a-z]')

case $build_os in
  linux)
    download_command="wget -O - -nv"
    tar_stdin=""
    ;;
  darwin)
    download_command="curl -sS"
    tar_stdin="-"

    build_os=osx
    ;;
  *)
    echo "Could not determine build OS"
    exit 1
esac

case $FRIDA_TARGET in
  linux)
    ;;
  android)
    if [ -z "$ANDROID_NDK_ROOT" ]; then
      echo "ERROR: ANDROID_NDK_ROOT must be set"
      exit 1
    fi
    ;;
  osx)
    ;;
  ios)
    if [ -z "$IOS_CERTID" -o -z "$IOS_IPADDR" ]; then
      echo "WARNING: IOS_CERTID and IOS_IPADDR should be set"
    fi
    ;;
  ps3)
    if [ -z "$PS3DEV" ]; then
      echo "ERROR: PS3DEV must be set"
      exit 1
    fi
    ;;
  *)
    echo "Invalid FRIDA_TARGET, must be either linux, android, osx, ios or ps3"
    exit 1
    ;;
esac

export FRIDA_ROOT="$(pwd)"
export FRIDA_BUILD="${FRIDA_ROOT}/build"
export FRIDA_PREFIX="${FRIDA_BUILD}/frida-${FRIDA_TARGET}"
export FRIDA_PREFIX_LIB="${FRIDA_PREFIX}/lib"
export FRIDA_TOOLROOT="${FRIDA_BUILD}/toolchain"
export FRIDA_SDKROOT="${FRIDA_BUILD}/sdk-${FRIDA_TARGET}"

case $FRIDA_TARGET in
  linux)
    export PATH="${FRIDA_TOOLROOT}/bin:${FRIDA_PREFIX}/bin:${PATH}"
    ;;
  android)
    ndk_target_platfom="android-8"
    ndk_tools_root="${ANDROID_NDK_ROOT}/toolchains/arm-linux-androideabi-4.4.3/prebuilt/darwin-x86"
    ndk_platform_root="${ANDROID_NDK_ROOT}/platforms/${ndk_target_platfom}/arch-arm"

    export PATH="${FRIDA_TOOLROOT}/bin:${ndk_tools_root}/bin:${PATH}"
    export CLICOLOR=1
    ;;
  ps3)
    export PSL1GHT="$PS3DEV/psl1ght"
    export PATH="${FRIDA_TOOLROOT}/bin:$PS3DEV/bin:$PS3DEV/host/ppu/bin:$PS3DEV/host/spu/bin:$PSL1GHT/host/bin:$PATH"
    ;;
  *)
    export PATH="${FRIDA_TOOLROOT}/bin:${IOS_DEVROOT}/usr/bin:/opt/local/bin:${PATH}"

    export MACOSX_DEPLOYMENT_TARGET=10.6
    export CLICOLOR=1
    ;;
esac

export PS1="\e[0;33m[\u@\h \w \e[m\e[1;33mfrida-${FRIDA_TARGET}\e[m\e[0;33m]\e[m\n\$ "

case $FRIDA_TARGET in
  linux)
    export CC="gcc"
    export CXX="g++"

    export CFLAGS="-ffunction-sections -fdata-sections"
    export LDFLAGS="-Wl,--gc-sections"
    ;;
  android)
    export CC=""
    export CXX=""

    export CFLAGS="--sysroot=${ndk_platform_root} \
-fpic \
-ffunction-sections \
-funwind-tables \
-D__ARM_ARCH_5__ -D__ARM_ARCH_5T__ \
-D__ARM_ARCH_5E__ -D__ARM_ARCH_5TE__ \
-Wno-psabi \
-march=armv5te \
-mtune=xscale \
-msoft-float \
-DANDROID \
-Wa,--noexecstack \
-I${FRIDA_SDKROOT}/include"
    export LDFLAGS="--sysroot=${ndk_platform_root} \
-L${ndk_platform_root}/usr/lib \
-Wl,-z,noexecstack \
-L${FRIDA_SDKROOT}/lib"
    ;;
  osx)
    export CC="/usr/bin/gcc-4.2"
    export CXX="/usr/bin/g++-4.2"
    export OBJC="/usr/bin/gcc-4.2"

    export CFLAGS=""
    export LDFLAGS=""
    ;;
  ios)
    export IOS_SDKVER="4.2"
    export IOS_MINVER="4.0"
    export IOS_DEVROOT="/Developer/Platforms/iPhoneOS.platform/Developer"
    export IOS_SDKROOT="${IOS_DEVROOT}/SDKs/iPhoneOS${IOS_SDKVER}.sdk"

    export CC="${IOS_DEVROOT}/usr/bin/gcc-4.2"
    export CXX="${IOS_DEVROOT}/usr/bin/g++-4.2"
    export OBJC="${IOS_DEVROOT}/usr/bin/gcc-4.2"

    export CFLAGS="-isysroot ${IOS_SDKROOT} -miphoneos-version-min=${IOS_MINVER} -arch armv7"
    export LDFLAGS="-isysroot ${IOS_SDKROOT} -Wl,-iphoneos_version_min,${IOS_MINVER} -arch armv7"
    ;;
  ps3)
    export CC=""
    export CXX=""

    export CFLAGS="-isystem ${PS3DEV}/host/ppu/include -isystem ${PSL1GHT}/include"
    export LDFLAGS="-L${PS3DEV}/host/ppu/lib -L${PSL1GHT}/lib"
    ;;
esac

export LD="${CC}"
export LDFLAGS="$LDFLAGS -no-undefined"

export CXXFLAGS="$CFLAGS"
export OBJCFLAGS="$CFLAGS"
export CPPFLAGS="$CFLAGS"

export ACLOCAL_FLAGS="-I ${FRIDA_PREFIX}/share/aclocal -I ${FRIDA_SDKROOT}/share/aclocal -I ${FRIDA_TOOLROOT}/share/aclocal"
export ACLOCAL="aclocal ${ACLOCAL_FLAGS}"
export CONFIG_SITE="${FRIDA_BUILD}/config.site"
export PKG_CONFIG="${FRIDA_TOOLROOT}/bin/pkg-config --define-variable=frida_sdk_prefix=${FRIDA_SDKROOT} --static"
export PKG_CONFIG_PATH="${FRIDA_PREFIX_LIB}/pkgconfig:${PS3DEV}/host/ppu/lib/pkgconfig"
export VALAC="${FRIDA_TOOLROOT}/bin/valac-0.10 --vapidir=\"${FRIDA_TOOLROOT}/share/vala-0.10/vapi\" --vapidir=\"${FRIDA_SDKROOT}/share/vala/vapi\" --vapidir=\"${FRIDA_PREFIX}/share/vala/vapi\""

case $FRIDA_TARGET in
  osx|ios)
    export LDFLAGS="$LDFLAGS -Wl,-dead_strip -Wl,-headerpad_max_install_names"
    ;;
esac

[ ! -d "${FRIDA_PREFIX}/share/aclocal}" ] && mkdir -p "${FRIDA_PREFIX}/share/aclocal"
[ ! -d "${FRIDA_PREFIX}/lib}" ] && mkdir -p "${FRIDA_PREFIX}/lib"

toolchain_version=20110118
if [ "$FRIDA_TARGET" = "android" ]; then
  sdk_version=20110118
else
  sdk_version=20101003
fi

if [ ! -d "${FRIDA_BUILD}/toolchain" ]; then
  echo "Downloading and deploying toolchain..."
  ${download_command} "http://frida-ire.googlecode.com/files/toolchain-${build_os}-${toolchain_version}.tar.bz2" | tar -C "${FRIDA_BUILD}" -xj ${tar_stdin} || exit 1
fi

if [ ! -d "${FRIDA_BUILD}/sdk-${FRIDA_TARGET}" ]; then
  echo "Downloading and deploying SDK for ${FRIDA_TARGET}..."
  ${download_command} "http://frida-ire.googlecode.com/files/sdk-${FRIDA_TARGET}-${sdk_version}.tar.bz2" | tar -C "${FRIDA_BUILD}" -xj ${tar_stdin} || exit 1
fi

for template in $(find ${FRIDA_TOOLROOT} ${FRIDA_SDKROOT} -name "*.frida.in"); do
  target=$(echo $template | sed 's,\.frida\.in$,,')
  cp -a "$template" "$target"
  sed -e "s,@FRIDA_TOOLROOT@,${FRIDA_TOOLROOT},g" -e "s,@FRIDA_SDKROOT@,${FRIDA_SDKROOT},g" "$template" > "$target"
done
