# config.site for configure

test "$prefix" = NONE && prefix="$FRIDA_PREFIX"

enable_nls=no

frida_warning_flags="-Wall"

frida_flags="-Os -pipe -gdwarf-2 -g3"

case $FRIDA_TARGET in
  linux-x86_32)
    host_alias="i686-linux-gnu"
    cross_compiling=yes
  ;;
  linux-x86_64)
    host_alias="x86_64-linux-gnu"
    cross_compiling=no
  ;;
  linux-arm)
    host_alias="arm-linux-gnueabi"
    cross_compiling=yes

    ac_tool_prefix="arm-linux-gnueabi-"
  ;;
  android)
    host_alias="arm-linux-androideabi"
    cross_compiling=yes

    ac_tool_prefix="arm-linux-androideabi-"
  ;;
  mac32)
    host_alias="i686-apple-darwin"
    cross_compiling=yes
  ;;
  ios)
    host_alias="arm-apple-darwin"
    cross_compiling=yes

    frida_flags="$frida_flags -mthumb"
  ;;
  ps3)
    host_alias="ppu"
    cross_compiling=yes

    ac_tool_prefix="ppu-"

    enable_shared=no
    enable_static=yes
  ;;
esac

# Work around a bug in stdint generation m4, where CFLAGS is overwritten,
# causing this check to conclude that there's no stdint.h support...
ac_cv_header_stdint_t=yes

if [ -x /usr/bin/install ]; then
  ac_cv_path_install="/usr/bin/install -p"
fi

case "$PACKAGE_TARNAME" in
  'glib')
    enable_dtrace=no
    enable_tests=no

    enable_shared=no
    enable_static=yes

    glib_cv_stack_grows=no
    glib_cv_uscore=no

    case $FRIDA_TARGET in
      android|ps3)
        ac_cv_func_posix_getgrgid_r=no
        ac_cv_func_posix_getpwuid_r=no
      ;;
      *)
        ac_cv_func_posix_getgrgid_r=yes
        ac_cv_func_posix_getpwuid_r=yes
      ;;
    esac

    case $FRIDA_TARGET in
      linux-*)
        glib_cv_have_qsort_r=yes
      ;;
      mac32|mac64|ios|android)
        glib_cv_have_qsort_r=no
      ;;
    esac

    case $FRIDA_TARGET in
      linux-*|mac32|mac64|ios|android|ps3)
        enable_proxy_libintl=yes
      ;;
    esac

    CFLAGS="$CFLAGS -I$FRIDA_PREFIX/include"
    LDFLAGS="$LDFLAGS -L$FRIDA_PREFIX/lib"
  ;;
  'libffi'|'vala'|'libgee'|'json-glib')
    enable_shared=no
    enable_static=yes
  ;;
  'libgum')
    if [ "$FRIDA_TARGET" = "android" ]; then
      LDFLAGS="$LDFLAGS -lz"
    fi
    enable_maintainer_mode=yes
    frida_flags="$frida_warning_flags $frida_flags"
  ;;
  'zed')
    enable_maintainer_mode=yes
    prefix="/Library/Frida"
    frida_flags="$frida_warning_flags $frida_flags"
  ;;
  *)
    frida_flags="$frida_warning_flags $frida_flags"
  ;;
esac

CFLAGS="$CFLAGS $frida_flags"
OBJCFLAGS="$OBJCFLAGS $frida_flags"
CXXFLAGS="$CXXFLAGS $frida_flags"

if test "$cache_file" = /dev/null; then
  cache_file="${FRIDA_PREFIX}/config.cache"
fi
